{"ast":null,"code":"var _jsxFileName = \"/root/testreactforweb/client/src/App.js\";\n// Don't Panic.\nimport React from 'react';\nimport axios from 'axios';\nimport FacebookLogin from 'react-facebook-login';\nimport GoogleLogin from 'react-google-login';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      id: 0,\n      name: null,\n      intervalIsSet: false,\n      idToDelete: 0,\n      idToUpdate: 0,\n      updateToApply: null\n    };\n\n    this.getDataFromDb = () => {\n      fetch('http://85.187.132.94:8080/api/getData').then(data => data.json()).then(res => this.setState({\n        data: res.data\n      }));\n    };\n\n    this.putDataToDb = name => {\n      //let currentIds = this.state.data.map((data) => data.id);\n      let idToBeAdded = this.state.data.length + 1;\n      console.log(idToBeAdded); // while(currentIds.includes(idToBeAdded))\n      // {\n      //   ++idToBeAdded;\n      // }\n\n      var data = {\n        id: idToBeAdded,\n        name: name\n      };\n      console.log(data.id + data.name);\n      console.log(\" post \" + idToBeAdded + \" \" + name);\n      axios.post('http://85.187.132.94:8080/api/postData', data);\n    };\n\n    this.deleteFromDb = idToDelete => {\n      parseInt(idToDelete);\n      let objIdToDelete = null;\n      this.state.data.forEach(dat => {\n        if (dat.id == idToDelete) {\n          objIdToDelete = dat._id;\n        }\n\n        console.log(typeof idToDelete + typeof objIdToDelete);\n        console.log(\" dat.id \" + dat.id + \" dat._id \" + dat._id + \" objIdToDelete \" + objIdToDelete + \" idToDelete \" + idToDelete);\n      });\n      console.log(\" delete \" + idToDelete + \" \" + objIdToDelete);\n      axios.delete(\"http://85.187.132.94:8080/api/deleteData/\".concat(objIdToDelete)).then(res => {\n        console.log(res);\n        console.log(res.data);\n      });\n    };\n\n    this.updateDb = (idToUpdate, updateToApply) => {\n      let objIdToUpdate = null;\n      parseInt(idToUpdate);\n      this.state.data.forEach(dat => {\n        console.log(typeof dat.id + typeof idToUpdate);\n\n        if (idToUpdate == dat.id) {\n          objIdToUpdate = dat._id;\n        }\n\n        console.log(\" dat_id \" + dat._id + \" type \" + typeof dat._id);\n        console.log(\" idToUpdate \" + idToUpdate + typeof idToUpdate + \" objIdToUpdate \" + objIdToUpdate + typeof objIdToUpdate);\n      });\n      console.log(\" update \" + idToUpdate + \" objIdToUpdate \" + objIdToUpdate);\n      axios.post('http://85.187.132.94:8080/api/updateData', {\n        id: objIdToUpdate,\n        update: {\n          name: updateToApply\n        }\n      });\n    };\n\n    this.facebookResponse = response => {\n      console.log(response);\n    };\n\n    this.googleResponse = response => {\n      console.log(response);\n    };\n  }\n\n  // This runs (1 second) after the render is done.\n  // This sets the interval.\n  componentDidMount() {\n    this.getDataFromDb();\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({\n        intervalIsSet: interval\n      });\n    }\n  } // If interval is set, it will kill the process, after the process is over.\n\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({\n        intervalIsSet: null\n      });\n    }\n  } // This method fetches the data from the back.\n\n\n  render() {\n    const data = this.state.data;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Database Test\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, data.length <= 0 ? 'NO DB ENTRIES YET' : data.map(dat => React.createElement(\"li\", {\n      key: dat.id,\n      style: {\n        padding: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        color: 'gray'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \" id: \"), \" \", dat.id, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        color: 'gray'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \" name: \"), \" \", dat.name, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      style: {\n        padding: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      onChange: e => this.setState({\n        name: e.target.value\n      }),\n      placeholder: \"Add something...\",\n      style: {\n        width: '200px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), \"\\xA0\", React.createElement(\"button\", {\n      onClick: () => this.putDataToDb(this.state.name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"ADD\")), React.createElement(\"div\", {\n      style: {\n        padding: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      style: {\n        width: '200px'\n      },\n      onChange: e => this.setState({\n        idToDelete: e.target.value\n      }),\n      placeholder: \"ID to delete here...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), \"\\xA0\", React.createElement(\"button\", {\n      onClick: () => this.deleteFromDb(this.state.idToDelete),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"DELETE\")), React.createElement(\"div\", {\n      style: {\n        padding: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      style: {\n        width: '200px'\n      },\n      onChange: e => this.setState({\n        idToUpdate: e.target.value\n      }),\n      placeholder: \"ID to Update...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), \"\\xA0\", React.createElement(\"input\", {\n      type: \"text\",\n      style: {\n        width: '200px'\n      },\n      onChange: e => this.setState({\n        updateToApply: e.target.value\n      }),\n      placeholder: \"Update to apply...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), \"\\xA0\", React.createElement(\"button\", {\n      onClick: () => this.updateDb(this.state.idToUpdate, this.state.updateToApply),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"UPDATE\")), React.createElement(\"div\", {\n      style: {\n        padding: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(FacebookLogin, {\n      appID: \"652034088607010\",\n      fields: \"name\",\n      callback: this.facebookResponse,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }), \"\\xA0\", React.createElement(GoogleLogin, {\n      clientId: \"814522605413-ph5o0t6vm0ahq4klrb2800nbg59fvpe1.apps.googleusercontent.com\",\n      buttonText: \"Login with Google\",\n      onSuccess: this.googleResponse,\n      onFailure: this.googleResponse,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/root/testreactforweb/client/src/App.js"],"names":["React","axios","FacebookLogin","GoogleLogin","App","Component","state","data","id","name","intervalIsSet","idToDelete","idToUpdate","updateToApply","getDataFromDb","fetch","then","json","res","setState","putDataToDb","idToBeAdded","length","console","log","post","deleteFromDb","parseInt","objIdToDelete","forEach","dat","_id","delete","updateDb","objIdToUpdate","update","facebookResponse","response","googleResponse","componentDidMount","interval","setInterval","componentWillUnmount","clearInterval","render","map","padding","color","e","target","value","width"],"mappings":"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","sourcesContent":["// Don't Panic.\r\n\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport GoogleLogin from 'react-google-login';\r\n\r\nclass App extends React.Component\r\n{\r\n  // Initializing the state here.\r\n  state = \r\n  {\r\n    data: [],\r\n    id: 0,\r\n    name: null,\r\n    intervalIsSet: false,\r\n    idToDelete: 0,\r\n    idToUpdate: 0,\r\n    updateToApply: null\r\n  };\r\n\r\n  // This runs (1 second) after the render is done.\r\n  // This sets the interval.\r\n  componentDidMount()\r\n  {\r\n    this.getDataFromDb();\r\n    if(!this.state.intervalIsSet)\r\n    {\r\n      let interval = setInterval(this.getDataFromDb, 1000);\r\n      this.setState({intervalIsSet: interval});\r\n    }\r\n  }\r\n\r\n  // If interval is set, it will kill the process, after the process is over.\r\n  componentWillUnmount()\r\n  {\r\n    if(this.state.intervalIsSet)\r\n    {\r\n      clearInterval(this.state.intervalIsSet);\r\n      this.setState({ intervalIsSet: null });\r\n    }\r\n  }\r\n\r\n  // This method fetches the data from the back.\r\n  getDataFromDb = () =>\r\n  {\r\n    fetch('http://85.187.132.94:8080/api/getData')\r\n      .then((data) => data.json())\r\n      .then((res) => this.setState({data: res.data}));\r\n  }\r\n  \r\n  // This method sends the name and the self-generated ID to the back to be added.\r\n  putDataToDb = (name) =>\r\n  {\r\n    //let currentIds = this.state.data.map((data) => data.id);\r\n    let idToBeAdded = this.state.data.length + 1;\r\n    console.log(idToBeAdded);\r\n    // while(currentIds.includes(idToBeAdded))\r\n    // {\r\n    //   ++idToBeAdded;\r\n    // }\r\n    var data = { id: idToBeAdded,\r\n      name: name\r\n    };\r\n    console.log(data.id + data.name);\r\n    console.log(\" post \" + idToBeAdded +\" \"+name);\r\n    axios.post('http://85.187.132.94:8080/api/postData',data);\r\n  }\r\n  \r\n  // This method sends the id to be deleted to the back.\r\n  deleteFromDb = (idToDelete) =>\r\n  {\r\n    parseInt(idToDelete);\r\n    let objIdToDelete = null;\r\n    this.state.data.forEach((dat) => \r\n    {\r\n      if(dat.id == idToDelete)\r\n      {\r\n        objIdToDelete = dat._id;\r\n      }\r\n      console.log(typeof(idToDelete)+typeof(objIdToDelete));\r\n      console.log(\" dat.id \"+dat.id+\" dat._id \"+dat._id+\" objIdToDelete \"+objIdToDelete+\" idToDelete \"+idToDelete );\r\n    });\r\n\r\n    console.log(\" delete \"+idToDelete+\" \"+objIdToDelete);\r\n    axios.delete(`http://85.187.132.94:8080/api/deleteData/${objIdToDelete}`)\r\n    .then((res) => {\r\n        console.log(res);\r\n        console.log(res.data);\r\n      }\r\n    );\r\n  }\r\n\r\n  // This method sends data and ID to be updated to the back.\r\n  updateDb = (idToUpdate, updateToApply) => \r\n  {\r\n    let objIdToUpdate = null;\r\n    parseInt(idToUpdate);\r\n    this.state.data.forEach((dat) =>\r\n    {\r\n      console.log(typeof(dat.id)+typeof(idToUpdate));\r\n      if(idToUpdate == dat.id)\r\n      {\r\n        objIdToUpdate = dat._id;\r\n      }\r\n      console.log(\" dat_id \"+dat._id+\" type \"+typeof(dat._id));\r\n      console.log(\" idToUpdate \"+idToUpdate+typeof(idToUpdate)+\" objIdToUpdate \"+objIdToUpdate +typeof(objIdToUpdate))\r\n    });\r\n\r\n    console.log(\" update \"+idToUpdate+\" objIdToUpdate \"+objIdToUpdate);\r\n    axios.post('http://85.187.132.94:8080/api/updateData',{\r\n      id: objIdToUpdate,\r\n      update: {name: updateToApply}\r\n    });\r\n  }\r\n\r\n  // Facebook login response manager\r\n  facebookResponse = (response) =>\r\n  {\r\n    console.log(response);\r\n  }\r\n\r\n  // Google login response manager\r\n  googleResponse = (response) =>\r\n  {\r\n    console.log(response);\r\n  }\r\n\r\n  render()\r\n  {\r\n    const {data} = this.state;\r\n    return(\r\n      <div className = 'container'>\r\n        <br/>\r\n        <h1>Database Test</h1>\r\n\r\n        <ul>\r\n          { data.length <= 0 \r\n           ? 'NO DB ENTRIES YET'\r\n           : data.map((dat) => \r\n            (\r\n              <li  key = { dat.id } style={{ padding: '10px' }} >\r\n                  <span style = {{ color: 'gray' }}> id: </span> {dat.id} <br/>\r\n                  <span style = {{ color: 'gray' }}> name: </span> {dat.name} <br/>\r\n                </li>\r\n           )\r\n          )\r\n          }\r\n        </ul>\r\n\r\n        <div style = {{ padding: '10px' }}>\r\n          <input\r\n            type='text'\r\n            onChange={(e) => this.setState({name: e.target.value})}\r\n            placeholder=\"Add something...\"\r\n            style={{ width: '200px' }}\r\n          />\r\n\r\n          &nbsp;\r\n\r\n          <button onClick={() => this.putDataToDb(this.state.name)}>\r\n            ADD\r\n          </button>\r\n        </div>\r\n\r\n        <div style={{ padding: '10px' }}>\r\n          <input\r\n            type=\"text\"\r\n            style={{width: '200px'}}\r\n            onChange={(e) => this.setState({idToDelete:e.target.value})}\r\n            placeholder='ID to delete here...'\r\n          />\r\n\r\n          &nbsp; \r\n\r\n          <button onClick={() => this.deleteFromDb(this.state.idToDelete)}>\r\n            DELETE\r\n          </button>\r\n        </div>\r\n\r\n        <div style={{ padding: '10px' }}>\r\n          <input\r\n            type=\"text\"\r\n            style={{ width: '200px' }}\r\n            onChange={(e) => this.setState({ idToUpdate: e.target.value })}\r\n            placeholder='ID to Update...'\r\n          />\r\n\r\n          &nbsp;\r\n\r\n          <input\r\n            type=\"text\"\r\n            style={{ width: '200px' }}\r\n            onChange={(e) => this.setState({ updateToApply: e.target.value })}\r\n            placeholder='Update to apply...'\r\n          />\r\n\r\n          &nbsp;\r\n\r\n          <button onClick={()=>this.updateDb(this.state.idToUpdate, this.state.updateToApply)}>\r\n            UPDATE\r\n          </button>\r\n        </div>\r\n        \r\n        <div style={{ padding: '10px' }}>          \r\n          <FacebookLogin\r\n            appID='652034088607010'\r\n            fields='name'\r\n            callback={this.facebookResponse}\r\n          />\r\n          \r\n          &nbsp;\r\n\r\n          <GoogleLogin\r\n            clientId='814522605413-ph5o0t6vm0ahq4klrb2800nbg59fvpe1.apps.googleusercontent.com'\r\n            buttonText='Login with Google'\r\n            onSuccess={this.googleResponse}\r\n            onFailure={this.googleResponse}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n"]},"metadata":{},"sourceType":"module"}